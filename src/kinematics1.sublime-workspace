{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"True",
				"true"
			],
			[
				"dTorq",
				"dTorqueWheel1"
			],
			[
				"pub_",
				"pub_Torque"
			],
			[
				"can",
				"can_id"
			],
			[
				"ROS",
				"ROS_INFO_ONCE"
			],
			[
				"Drive",
				"DriveModule"
			],
			[
				"ros",
				"ROS_WARN_ONCE"
			],
			[
				"time",
				"time"
			],
			[
				"dD",
				"dDeltaPhi"
			],
			[
				"Geom",
				"GeomCtrl"
			],
			[
				"d",
				"dPos_X"
			],
			[
				"ROS_I",
				"ROS_INFO_ONCE"
			],
			[
				"vd",
				"vdtempVelWheelMMS"
			],
			[
				"va",
				"var3"
			],
			[
				"func",
				"func1"
			],
			[
				"dVe",
				"dVel_x_cmd"
			],
			[
				"dte",
				"dtempVelXRobMMS"
			],
			[
				"hom",
				"homing3"
			],
			[
				"ho",
				"homing2"
			],
			[
				"homi",
				"homing1"
			],
			[
				"inc",
				"include"
			],
			[
				"i",
				"i"
			],
			[
				"p",
				"p_gain"
			],
			[
				"error",
				"error_calc"
			],
			[
				"ga",
				"p_gain"
			],
			[
				"tor",
				"torque_data"
			],
			[
				"vel",
				"velocity_data"
			],
			[
				"torq",
				"torque_data"
			],
			[
				"ve",
				"vel_msg"
			],
			[
				"rea",
				"reachICR"
			],
			[
				"vector",
				"vector\tstandard header"
			],
			[
				"tim",
				"TimeStamp"
			],
			[
				"a",
				"a"
			],
			[
				"ST",
				"ST_DRIVE_INIT"
			],
			[
				"E",
				"EmergencyStopState"
			],
			[
				"rec",
				"recMessages"
			],
			[
				"homin",
				"homing"
			],
			[
				"homing",
				"homing"
			],
			[
				"status",
				"status1"
			],
			[
				"sta",
				"start"
			],
			[
				"EVAL",
				"evaluatingMessageReceived"
			],
			[
				"eval",
				"evaluatingMessageReceived"
			],
			[
				"eva",
				"evaluatingMessageReceived"
			],
			[
				"m_",
				"m_iDigIn"
			],
			[
				"m",
				"m_iDigIn"
			],
			[
				"Dri",
				"DriveModule"
			],
			[
				"get",
				"getGearPosAndVel"
			],
			[
				"m_i",
				"m_iNumOfJoints"
			],
			[
				"stat",
				"status3"
			],
			[
				"whi",
				"while"
			],
			[
				"set",
				"setVelInRadS"
			],
			[
				"Tor",
				"Torque_2_wheel"
			],
			[
				"to",
				"Torque_1_wheel"
			],
			[
				"To",
				"Torque_4_wheel"
			],
			[
				"bhm",
				"bhm_done"
			],
			[
				"m_b",
				"m_bLimSwRight"
			],
			[
				"velo",
				"velocity_data1"
			],
			[
				"plot",
				"plot"
			],
			[
				"veloc",
				"velocity_data"
			],
			[
				"de",
				"delimiter"
			],
			[
				"veloci",
				"velocity_data"
			],
			[
				"torque",
				"torque_data"
			],
			[
				"pro",
				"process_ContactlessFriction"
			],
			[
				"my",
				"myfile1"
			],
			[
				"sub",
				"subplots"
			],
			[
				"win",
				"window1"
			],
			[
				"diff",
				"diff_X1"
			],
			[
				"process",
				"process_velocityData"
			],
			[
				"myfile",
				"myfile1"
			],
			[
				"myfi",
				"myfile1"
			],
			[
				"pl",
				"plot"
			],
			[
				"loop",
				"loop_rate"
			],
			[
				"camer",
				"camera_link"
			],
			[
				"Planar",
				"Planar_4"
			],
			[
				"Plana",
				"Planar_3"
			],
			[
				"Plan",
				"Planar_2"
			],
			[
				"tr",
				"Tree"
			],
			[
				"cons",
				"constraint"
			],
			[
				"Add",
				"AddLoopConstraint"
			],
			[
				"shaft",
				"shaft_4_link"
			],
			[
				"sha",
				"shaft_1_link"
			],
			[
				"wheel",
				"wheel_1_link"
			],
			[
				"shaf",
				"shaft_4_joint"
			],
			[
				"whe",
				"wheel_4_joint"
			],
			[
				"whee",
				"wheel_3_joint"
			],
			[
				"wh",
				"wheel_4_link"
			],
			[
				"push",
				"push_back"
			],
			[
				"mpo",
				"mpo_700"
			],
			[
				"du",
				"dummy_link"
			],
			[
				"wheel_0",
				"wheel_0_link"
			],
			[
				"ge",
				"getSegments"
			],
			[
				"st",
				"std"
			],
			[
				"no",
				"no_of_joints"
			],
			[
				"size",
				"size_t"
			],
			[
				"vi",
				"VisualAspect"
			],
			[
				"BO",
				"BodyNode"
			],
			[
				"getNum",
				"getNumBodyNodes"
			],
			[
				"n",
				"no_of_joint1"
			],
			[
				"mo",
				"moving_tile_y_long_path2"
			],
			[
				"model",
				"model_path"
			],
			[
				"j",
				"j"
			],
			[
				"c",
				"cHeader"
			],
			[
				"loc",
				"local_queue"
			],
			[
				"cDa",
				"cDat"
			],
			[
				"end",
				"endl"
			],
			[
				"che",
				"checksum"
			],
			[
				"cHe",
				"cHeader1"
			],
			[
				"recie",
				"received_checksum"
			],
			[
				"siz",
				"size"
			],
			[
				"Byte",
				"BytesToRead"
			],
			[
				"ms",
				"msg_type"
			],
			[
				"iN",
				"iNrBytesRead"
			],
			[
				"cHea",
				"cHeader"
			],
			[
				"cHra",
				"cHeader"
			],
			[
				"m_de",
				"m_DeviceName"
			],
			[
				"ser",
				"SerialIO"
			],
			[
				"seria",
				"serial_port"
			],
			[
				"num",
				"num_bytes"
			],
			[
				"co",
				"cout"
			],
			[
				"seri",
				"serial_port"
			],
			[
				"serial",
				"SerialIO"
			],
			[
				"byte",
				"byteswritten"
			],
			[
				"conne",
				"connected"
			],
			[
				"ba",
				"baud_Set"
			],
			[
				"ch",
				"chatter_pub"
			],
			[
				"s",
				"string\tstandard header"
			],
			[
				"in",
				"include"
			],
			[
				"active",
				"active_usboard"
			]
		]
	},
	"buffers":
	[
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "neo_kinematics_omnidrive.cpp",
			"settings":
			{
				"buffer_size": 94269,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "excitation_node.py",
			"settings":
			{
				"buffer_size": 1075,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/launch/mpo_700_CanCtrl.yaml",
			"settings":
			{
				"buffer_size": 5541,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/launch/mpo_700_CanCtrl.yaml",
			"settings":
			{
				"buffer_size": 5541,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/src/ElmoMotorCtrl.cpp",
			"settings":
			{
				"buffer_size": 19618,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
			"settings":
			{
				"buffer_size": 60318,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/ElmoMotorCtrl.h",
			"settings":
			{
				"buffer_size": 4304,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/SocketCan.h",
			"settings":
			{
				"buffer_size": 1366,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/ElmoMotorCtrl.h",
			"settings":
			{
				"buffer_size": 4457,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveModule.h",
			"settings":
			{
				"buffer_size": 5465,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/NeoKinematics.h",
			"settings":
			{
				"buffer_size": 4112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/NeoKinematicsOmniDrive.h",
			"settings":
			{
				"buffer_size": 7785,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "DriveModule.cpp",
			"settings":
			{
				"buffer_size": 6948,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ElmoMotorCtrl.cpp",
			"settings":
			{
				"buffer_size": 20126,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveParameters.h",
			"settings":
			{
				"buffer_size": 4788,
				"line_ending": "Unix"
			}
		},
		{
			"file": "SocketCan.cpp",
			"settings":
			{
				"buffer_size": 2539,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "neo_kinematics.cpp",
			"settings":
			{
				"buffer_size": 20239,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive",
		"/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include",
		"/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive",
		"/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/src"
	],
	"file_history":
	[
		"/media/pradheep/Pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/src/SocketCan.cpp",
		"/home/pradheep/neo_mpo_700kinematics/src/neo_kinematics_omnidrive/src/neo_kinematics_loading_params.cpp",
		"/home/pradheep/neo_mpo_700kinematics/src/neo_kinematics_omnidrive/CMakeLists.txt",
		"/home/pradheep/neo_mpo_700kinematics/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
		"/home/pradheep/Desktop/TBVC.py",
		"/tmp/mozilla_pradheep0/code_snippet_homing.cpp",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/scripts/spawn_obstacles_track2.py",
		"/home/pradheep/rnd_data_processing/data_processing.py",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400.urdf.xacro",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
		"/home/pradheep/kinetic/neo_simulation/robots/mpo_700/xacros/mpo_700_gazebo.xacro",
		"/home/pradheep/R_n_D_MPO700_Ws/src/dynamic_tree/src/dynamic_tree.cpp",
		"/home/pradheep/mpo_700_ws/src/cob_driver/cob_undercarriage_ctrl/common/src/UndercarriageCtrlGeom.cpp",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/srv/MotorSwitch.srv",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/DriveModule.cpp",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/launch/mpo_700_CanCtrl.yaml",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/rbdl_tree/src/main.cpp",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_400/xacros/camera.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_500/xacros/mp_500_gazebo.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/urdf/xacros/mp_400_gazebo.xacro",
		"/home/pradheep/kinetic/neo_simulation/robots/mp_400/mp_400.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_400/xacros/mp_400_gazebo.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_400/mp_400.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/simulation.launch",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/neo_simulation/robots/mpo_700/xacros/mpo_700_wheel.xacro",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/neo_simulation/robots/mpo_700/xacros/mpo_700_head.xacro",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/neo_simulation/robots/mpo_700/xacros/mpo_700_body.xacro",
		"/home/pradheep/inertia_ws/src/neo_simulation/robots/mpo_700/xacros/mpo_700_wheel.xacro",
		"/home/pradheep/inertia_ws/src/neo_simulation/robots/mpo_700/xacros/mpo_700_head.xacro",
		"/home/pradheep/neo_mpo_500/robot_model/mpo_500/mpo_500.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_500/mp_500.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mmo_700/mmo_700.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mmo_500/mmo_500.urdf.xacro",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/rbdl_tree/CMakeLists.txt",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/rbdl_tree/FindRBDL.cmake",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/ElmoMotorCtrl.h",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveParameters.h",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/ElmoMotorCtrl.cpp",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveModule.h",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/CMakeLists.txt",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/excitation_node.py",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/friction_estimation_node.py",
		"/home/pradheep/.cache/.fr-760iNF/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
		"/home/pradheep/.cache/.fr-pocdni/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/ElmoMotorCtrl.cpp",
		"/home/pradheep/.cache/.fr-YOSSQX/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/DriveModule.cpp",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/NeoKinematicsOmniDrive.h",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_500/xacros/mpo_500_gazebo.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/launch/mpo_700/mpo_700_camera.launch",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_700/xacros/mpo_700_gazebo.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_700/xacros/camera.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_500/mpo_500.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_700/mpo_700.urdf.xacro",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/rbdl_tree/FindEigen3.cmake",
		"/home/pradheep/rbdl-rbdl-0879ee8c548a/src/Constraint_Contact.cc",
		"/home/pradheep/rbdl-local-repo/rbdl-orb/include/rbdl/SpatialAlgebraOperators.h",
		"/home/pradheep/dart/python/dartpy/include/dartpy/pointers.h",
		"/home/pradheep/rbdl-rbdl-0879ee8c548a/tests/CustomConstraintsTests.cc",
		"/home/pradheep/cpp_practice/src/main.cpp",
		"/home/pradheep/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/identification_node.cpp",
		"/home/pradheep/mpo_700_ws/src/cob_driver/cob_base_drive_chain/common/src/CanCtrlPltfCOb3.cpp",
		"/home/pradheep/mpo_700_ws/src/cob_driver/cob_canopen_motor/common/include/cob_canopen_motor/DriveParam.h",
		"/home/pradheep/mpo_700_ws/src/cob_driver/cob_canopen_motor/common/src/CanDriveHarmonica.cpp",
		"/home/pradheep/rbdl-rbdl-0879ee8c548a/src/Constraint_Loop.cc",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_700/mpo_700.urdf",
		"/home/pradheep/.cache/.fr-sJDzKw/mpo700_neobotix_ws/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/sick_laser.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/mp_400_fixed_wheel_right.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/mp_400_fixed_wheel_left.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/mp_400_caster_wheel.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/mp_400_body.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/simple_gripper_brackets.urdf.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/prbt_macro.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/prbt.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_pilz/urdf/xacros/cabinet.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mm_400/mm_400_panda/urdf/xacros/cabinet.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mm_400/urdf/xacros/mp_400_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mmo_500/urdf/xacros/mpo_500_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mmo_700/urdf/xacros/mpo_700_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_400/xacros/mp_400_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_500/xacros/mp_500_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_500/xacros/mpo_500_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mm_400/urdf/xacros/camera.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_700/xacros/camera.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_700/mpo_700.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_700/xacros/ultrasonic.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_700/xacros/imu.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/config/mpo_700/scan_unifier/unifier.yaml",
		"/home/pradheep/config_ws/src/neo_simulation/config/mpo_500/scan_unifier/unifier.yaml",
		"/home/pradheep/config_ws/src/neo_simulation/config/mmo_700/scan_unifier/unifier.yaml",
		"/home/pradheep/config_ws/src/neo_simulation/config/mmo_500/scan_unifier/unifier.yaml",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_500/mp_500.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_500/xacros/sick_laser_s300.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_400/mp_400.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mmo_700/mmo_700.urdf.xacro",
		"/home/pradheep/R_n_D_Dynamic_Parmeter_identification/dynamic_tree/CMakeLists.txt",
		"/home/pradheep/Fabmatics/src/fabmatics_extern/cob_base_drive_chain/ros/src/cob_base_drive_chain.cpp",
		"/home/pradheep/Fabmatics/src/fabmatics_extern/cob_undercarriage_ctrl/ros/src/cob_undercarriage_ctrl.cpp",
		"/home/pradheep/rbdl/tests/LoopConstraintsTests.cc",
		"/home/pradheep/mpo_700_ws/src/cob_driver/cob_base_drive_chain/ros/src/cob_base_drive_chain.cpp",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_500/xacros/mpo_500_body.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mpo_500/xacros/omni_wheel.xacro",
		"/home/pradheep/neobotix_workspace/src/neo_simulation/robots/mp_400/xacros/mp_400_fixed_wheel_left.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mmo_500/mmo_500.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mm_400/mm_400.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_500/mpo_500.urdf.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mpo_700/xacros/mpo_700_gazebo.xacro",
		"/home/pradheep/config_ws/src/neo_simulation/robots/mp_500/xacros/sick_laser_microscan.xacro",
		"/home/pradheep/Fabmatics/src/fabmatics_extern/cob_base_drive_chain/common/src/CanCtrlPltfCOb3.cpp",
		"/home/pradheep/mpo_500ws/src/neo_relayboard_v2/common/src/neo_relayboard_v2_lib.cpp",
		"/home/pradheep/mpo_500ws/src/neo_relayboard_v2/common/src/RelayBoard_v2.cpp",
		"/home/pradheep/mpo_500ws/src/neo_relayboard_v2/common/src/SerialIO.cpp",
		"/home/pradheep/mpo_500ws/src/neo_relayboard_v2/common/include/RelayBoard_v2.h",
		"/home/pradheep/neobotix_workspace/neo_relayboard_v2/common/src/RelayBoard_v2.cpp",
		"/home/pradheep/neo_simulation/config/mp_500/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/config/mm_400/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/robots/mm_400/urdf/xacros/ultrasonic.xacro",
		"/home/pradheep/neo_simulation/robots/mm_400/urdf/xacros/mp_400_gazebo.xacro",
		"/home/pradheep/neo_simulation/config/mmo_500/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/config/mmo_700/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/config/mpo_500/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/config/mpo_700/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/config/mp_400/move_base/costmaps/costmap_common.yaml",
		"/home/pradheep/neo_simulation/robots/mm_400/mm_400.urdf.xacro",
		"/home/pradheep/neo_simulation/robots/mm_400/urdf/xacros/imu.xacro",
		"/home/pradheep/neo_simulation/robots/mpo_700/xacros/mpo_700_gazebo.xacro",
		"/home/pradheep/neo_simulation/robots/mpo_700/mpo_700.urdf.xacro",
		"/home/pradheep/neo_simulation/robots/mpo_700/xacros/imu.xacro",
		"/home/pradheep/neo_simulation/robots/mpo_700/xacros/ultrasonic.xacro"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"odomet",
			"JointTorqueMeasure",
			"er(",
			"arming the wheels",
			"er(",
			"setVel",
			"m_MotorSteer2",
			"std::cout",
			"er(",
			"TriggeredCondition",
			"arm",
			"arming",
			"configureHoming",
			"er(",
			"er",
			"0.42",
			"TriggeredCondition",
			"bool er(",
			"homingDone",
			"m_sCanCtrl.",
			"m.lock",
			"m.;ock",
			"mutex",
			"NK1.n",
			"bool er",
			"configureHoming",
			"m_iEncOffsetIncrement",
			"er",
			"getgeartor",
			"getgear",
			"NC1",
			"setVel",
			"m_iDriveState",
			"m_iDriveState\n",
			"m_iDriveState",
			"recMessages",
			"sendCanMessage",
			"recMessages",
			"stopMotion",
			"turnOn",
			"turn",
			"evaluateStatusRegister",
			"turnOnMotor",
			"evaluateStatusRegister",
			"evaluatingMessageReceived",
			"recMessages",
			"er",
			"sendCa",
			"100",
			"start",
			"sdo",
			"sendCanMessage",
			"pub_Joint_controller",
			"timer",
			"      // viRet= DM1.recMessages(); \n\n      // // auto t2 = std::chrono::steady_clock::now();\n      // // iTimeSleep1 = std::chrono::duration_cast<std::chrono::microseconds>( t2 - t1 ).count();\n      // viRet2= DM2.recMessages(); \n      // viRet3= DM3.recMessages(); ",
			"sendCanMessage",
			"DM1",
			"receiveMsg",
			"send",
			"evaluatingMessageReceived",
			"sendCanMessage",
			"sendCam",
			"sendCanMessage",
			"02",
			"recMessages",
			"sync-msg",
			"eval",
			"sync",
			"sendCanMessage",
			"bService_called",
			"ST_SERVICE_CALLED",
			"ST_NOT_HOMED",
			"std::cout",
			"std:cout",
			"Steer.",
			"Steer",
			"transmitMsg",
			"iSocket",
			"iDriveRet",
			"displayErrors",
			"display",
			"driveErrors",
			"m_DriveError",
			"iStatusReqFail",
			"No answer on status request",
			"settingDriveParams",
			"iStatusReqFail",
			"m_DriveError",
			"m_iMotionDirection",
			"receiveMsg",
			"transmi",
			"here",
			"          ",
			"transmitMsg(Cmsg);",
			"transmitMsg(msg);",
			"transmit",
			"Steer->",
			"Drive->",
			"m_sCanCtrl->",
			"std::cout",
			"100",
			"m_sCanCtrl->",
			"m_sCanCtrl",
			"iSentBuffer",
			"transmitMsg",
			"iTimeSleep",
			"150",
			"2",
			"\n  ",
			"pubJointStates",
			"i<=8",
			"i<8",
			"state",
			"cmd_vel",
			"m_vdExWheelAngRad",
			"m_vdExWheelDistMM",
			"m_vdWheelDistMM",
			"m_vdSteerGearAngRad",
			"vdWheelNeutralPos",
			"vdSteerGearAngRad",
			"SetRequiredWheelPoses",
			"m_vdSteerGearAngRad",
			"m_vdSteerGearAngTargetRad",
			"here",
			"pubJointControllerStates",
			"m_vdWheelPosYMM",
			"m_vdExWheelDistMM",
			"m_vdCtrlVal"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"m_sCanCtrl->",
			"n",
			"Drive.",
			"transmitMsg(Cmsg, true);",
			"transmitMsg(msg, true);",
			"Steer.",
			"Drive.",
			"m_sCanCtrl.",
			"2",
			"4",
			"iNumOfJoints",
			"velocities[i]; ",
			".positions[i]",
			"dVel_y_cmd",
			"dVel_x_cmd",
			"joint_state_odom_stamp",
			"bBroadcast_tf",
			"dVel_rad_cmd",
			"dVel_X_last",
			"dVel_Rad_last",
			"dVel_Y_last",
			"vel_y_rob_last_",
			"dVel_Y_last",
			"dPos_Rad",
			"dPos_Y",
			"dPos_X"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "neo_kinematics_omnidrive.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 94269,
						"regions":
						{
						},
						"selection":
						[
							[
								74473,
								74473
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 52063.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "excitation_node.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1075,
						"regions":
						{
						},
						"selection":
						[
							[
								345,
								345
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 80.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/launch/mpo_700_CanCtrl.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5541,
						"regions":
						{
						},
						"selection":
						[
							[
								5541,
								5541
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1242.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/launch/mpo_700_CanCtrl.yaml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5541,
						"regions":
						{
						},
						"selection":
						[
							[
								5541,
								5541
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2703.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/src/ElmoMotorCtrl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19618,
						"regions":
						{
						},
						"selection":
						[
							[
								3463,
								3463
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1800.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/src/neo_kinematics_omnidrive.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60318,
						"regions":
						{
						},
						"selection":
						[
							[
								55119,
								55119
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 39762.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/pradheep/homingtest/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/ElmoMotorCtrl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4304,
						"regions":
						{
						},
						"selection":
						[
							[
								1590,
								1590
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 874.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/SocketCan.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1366,
						"regions":
						{
						},
						"selection":
						[
							[
								541,
								541
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 280.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/ElmoMotorCtrl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4457,
						"regions":
						{
						},
						"selection":
						[
							[
								1636,
								1636
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 874.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveModule.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5465,
						"regions":
						{
						},
						"selection":
						[
							[
								1648,
								1648
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/NeoKinematics.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4112,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 918.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/NeoKinematicsOmniDrive.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7785,
						"regions":
						{
						},
						"selection":
						[
							[
								4815,
								4815
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2661.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "DriveModule.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6948,
						"regions":
						{
						},
						"selection":
						[
							[
								6390,
								6390
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4104.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "ElmoMotorCtrl.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20126,
						"regions":
						{
						},
						"selection":
						[
							[
								6608,
								6608
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3492.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/home/pradheep/neo_mpo700_kinematics/src/neo_kinematics_omnidrive/include/neo_kinematics_omnidrive/DriveParameters.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4788,
						"regions":
						{
						},
						"selection":
						[
							[
								1533,
								1533
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1548.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "SocketCan.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2539,
						"regions":
						{
						},
						"selection":
						[
							[
								190,
								190
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "neo_kinematics.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20239,
						"regions":
						{
						},
						"selection":
						[
							[
								17588,
								17588
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6912.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 120.0
	},
	"pinned_build_system": "",
	"project": "kinematics1.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 291.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
